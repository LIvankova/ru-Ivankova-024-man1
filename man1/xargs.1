.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" John B. Roll Jr. and the Institute of Electrical and Electronics
.\" Engineers, Inc.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@(#)xargs.1	8.1 (Berkeley) 6/6/93
.\" $xMach: xargs.1,v 1.2 2002/02/23 05:23:37 tim Exp $
.\"
.Dd Сентябрь 21, 2020
.Dt XARGS 1
.Os
.Sh ИМЯ
.Nm xargs
.Nd "создает список(ки) аргументов и запускает утилиту"
.Sh КРАТКОЕ ОПИСАНИЕ
.Nm
.Op Fl 0oprt
.Op Fl E Ar eofstr
.Oo
.Fl I Ar replstr
.Op Fl R Ar замены
.Op Fl S Ar replsize
.Oc
.Op Fl J Ar replstr
.Op Fl L Ar номер
.Oo
.Fl n Ar номер
.Op Fl x
.Oc
.Op Fl P Ar maxprocs
.Op Fl s Ar размер
.Op Ar utility Op Ar argument ...
.Sh ОПИСАНИЕ
Утилита
.Nm
считывает строки, разделенные пробелом, табуляцией, новой строкой и концом файла, из стандартного ввода и выполняет
.Ar утилиту
с строками в качестве аргумента.
.Pp
Все аргументы, указанные в командной строке, передаются 
.Ar утилите
при каждом вызове, за которым следует некоторое количество аргументов, считываемых
из стандартного ввода
.Nm .
Это повторяется до тех пор, пока не будет исчерпан стандартный ввод.
.Pp
Пробелы, символы табуляции и новые строки могут быть вставлены в аргументы с помощью одинарные
(``\ '\ '')
или двойныйх (``"'') кавычек или обратной косой черты (``\e'').
Одинарные кавычки заключают в себя все символы, не заключенные в одинарные кавычки, за исключением перевода строки,
вплоть до соответствующей одинарной кавычки.
Двойные кавычки заключают в себя все символы, не заключенные в двойные кавычки, за исключением перевода строки,
вплоть до соответствующей двойной кавычки.
Любой отдельный символ, включая символы новой строки, может быть экранирован обратной косой чертой.
Возможны следующие параметры:
.Bl -tag -width indent
.It Fl 0 , Fl -null
Меняет
.Nm
на ожидание нулевого значения
(``\\0'')
символы в качестве разделителей вместо пробелов и новой строки.
Подразумевается, что это будет использоваться совместно с функцией
.Fl print0
в
.Xr find 1 .
.It Fl E Ar eofstr
Используется
.Ar eofstr
в качестве логического маркера EOF.
.It Fl I Ar replstr
Исключает
.Ar утилиту
для каждой строки ввода, заменяя одно или несколько вхождений в
.Ar replstr
вплоть до
.Ar замен
(или до 5, если флаги
.Fl R
не указаны) аргументы к
.Ar утилите
со всей строкой ввода.
Результирующим аргументам после выполнения замены не будет разрешено выходить
за пределы
.Ar replsize
(или за 255, если флаг
.Fl S
не указан)
байт; это реализуется с помощью объединения как можно большей части аргумента, содержащего
.Ar replstr
насколько это возможно, к построенным аргументам для
.Ar утилиты ,
вплоть до
.Ar replsize
байт.
Ограничение по размеру не применяется к аргументам для
.Ar утилиты ,
которая не содержит
.Ar replstr ,
и, кроме того, никакая замена не будет производиться на саму
.Ar утилиту
.
Подразумевается, что
.Fl x .
.It Fl J Ar replstr
Если этот параметр указан, то 
.Nm
будет использовать данные, считанные из стандартного ввода, для замены первого вхождения
.Ar replstr
вместо того, чтобы добавлять эти данные после всех остальных аргументов.
Этот параметр не повлияет на то, сколько аргументов будет считываться из входных данных
.Pq Fl n ,
или размер команды(команд)
.Nm
сформирует
.Pq Fl s .
Параметр просто перемещает место, где эти аргументы будут помещены в выполняемые команды.

.Ar replstr
должен проявиться как отдельный
.Ar аргумент
к
.Nm .
Оно не будет распознано, если, например, оно находится в середине
строки, заключенной в кавычки.
Более того, только первое вхождение
.Ar replstr
будет заменено.
Например, следующая команда скопирует список файлов и
каталогов, которые начинаются с заглавной буквы в текущем
каталоге, в
.Pa destdir :
.Pp
.Dl /bin/ls -1d [A-Z]* | xargs -J % cp -Rp % destdir
.It Fl L Ar number
Call
.Ar utility
для каждого
.Ar номера
прочитанной строки.
Если достигнуто значение EOF и было прочитано меньше строк, чем
.Ar указанное число ,
тогда
.Ar утилита
будет вызван с помощью доступных строк.
.It Fl n Ar number , Fl -max-args= Ns Ar number
Устанавливает максимальное количество аргументов, получаемых из стандартного ввода, для каждого вызова
.Ar утилиты .
Вызов
.Ar утилиты
использует меньшее
.Ar число ,
чем стандартные входные аргументы, если количество накопленных байт (см. параметр
.Fl s
) превышает заданный
.Ar размер
или их меньше, чем
.Ar число
аргументов, оставшихся для последнего вызова
.Ar утилиты .
Текущим значением по умолчанию для
.Ar числа
является 5000.
.It Fl o
Переоткрывает stdin в качестве
.Pa /dev/tty
в дочернем процессе перед выполнением команды.
Это пригождается, если вы хотите
.Nm
запустить интерактивное приложение
.It Fl P Ar maxprocs , Fl -max-procs= Ns Ar maxprocs
Параллельный режим: работает не более
.Ar maxprocs
вызовов 
.Ar утилиты
одновременно.
Если
.Ar maxprocs
значение установлено на 0, то
.Nm
будет запущено как можно больше процессов.
.It Fl p , Fl -interactive
Повторяйте каждую команду, которая должна быть выполнена, и спрашивайте пользователя, следует ли ее выполнять.
Положительный ответ,
.Ql y
в языковом стандарте POSIX
вызывает выполнение команды, любой другой ответ приводит к ее
пропуску.
Команды не выполняются, если процесс не подключен к терминалу.
.It Fl r , Fl -no-run-if-empty
Совместимость с GNU
.Nm .
Версия GNU для
.Nm
запускает аргумент
.Ar утилиты
хотя бы один раз, даже если
.Nm
входные данные пусты, и он поддерживает параметр
.Fl r ,
чтобы исключить такое поведение.
Версия
.Fx

.Nm
не запускает
.Ar утилиту
аргумента для пустых входных данных, но она поддерживает параметр
.Fl r
для обеспечения совместимости командной строки с GNU
.Nm ,
но параметр
.Fl r
не имеет никакого значения
.Fx
в версии
.Nm .
.It Fl R Ar replacements
Specify the maximum number of arguments that
.Fl I
will do replacement in.
If
.Ar replacements
is negative, the number of arguments in which to replace is unbounded.
.It Fl S Ar replsize
Specify the amount of space (in bytes) that
.Fl I
can use for replacements.
The default for
.Ar replsize
is 255.
.It Fl s Ar size , Fl -max-chars= Ns Ar size
Set the maximum number of bytes for the command line length provided to
.Ar utility .
The sum of the length of the utility name, the arguments passed to
.Ar utility
(including
.Dv NULL
terminators) and the current environment will be less than or equal to
this number.
The current default value for
.Ar size
is
.Dv ARG_MAX
- 4096.
.It Fl t , Fl -verbose
Echo the command to be executed to standard error immediately before it
is executed.
.It Fl x , Fl -exit
Force
.Nm
to terminate immediately if a command line containing
.Ar number
arguments will not fit in the specified (or default) command line length.
.El
.Pp
If
.Ar utility
is omitted,
.Xr echo 1
is used.
.Pp
Undefined behavior may occur if
.Ar utility
reads from the standard input.
.Pp
If a command line cannot be assembled, or
cannot be invoked, or if an invocation of
.Ar utility
is terminated by a signal,
or an invocation of
.Ar utility
exits with a value of 255, the
.Nm
utility stops processing input and exits after all invocations of
.Ar utility
finish processing.
.Sh EXIT STATUS
The
.Nm
utility exits with a value of 0 if no error occurs.
If
.Ar utility
cannot be found,
.Nm
exits with a value of 127, otherwise if
.Ar utility
cannot be executed,
.Nm
exits with a value of 126.
If any other error occurs,
.Nm
exits with a value of 1.
.Sh EXAMPLES
Create a 3x3 matrix with numbers from 1 to 9.
Every
.Xr echo 1
instance receives three lines as arguments:
.Bd -literal -offset indent
$ seq 1 9 | xargs -L3 echo
1 2 3
4 5 6
7 8 9
.Ed
.Pp
Duplicate every line from standard input:
.Bd -literal -offset indent
$ echo -e "one\\ntwo\\nthree" | xargs -I % echo % %
one one
two two
three three
.Ed
.Pp
Execute at most 2 concurrent instances of
.Xr find 1
every one of them using one of the directories from the standard input:
.Bd -literal -offset indent
echo -e "/usr/ports\\n/etc\\n/usr/local" | xargs -J % -P2 -n1 find % -name file
.Ed
.Sh SEE ALSO
.Xr echo 1 ,
.Xr find 1 ,
.Xr execvp 3
.Sh STANDARDS
The
.Nm
utility is expected to be
.St -p1003.2
compliant.
The
.Fl J , o , P , R
and
.Fl S
options are non-standard
.Fx
extensions which may not be available on other operating systems.
.Sh HISTORY
The
.Nm
utility appeared in PWB UNIX.
.Sh BUGS
If
.Ar utility
attempts to invoke another command such that the number of arguments or the
size of the environment is increased, it risks
.Xr execvp 3
failing with
.Er E2BIG .
.Pp
The
.Nm
utility does not take multibyte characters into account when performing
string comparisons for the
.Fl I
and
.Fl J
options, which may lead to incorrect results in some locales.
