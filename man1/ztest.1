.\"
.\" CDDL HEADER START
.\"
.\" The contents of this file are subject to the terms of the
.\" Common Development and Distribution License (the "License").
.\" You may not use this file except in compliance with the License.
.\"
.\" You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
.\" or https://opensource.org/licenses/CDDL-1.0.
.\" See the License for the specific language governing permissions
.\" and limitations under the License.
.\"
.\" When distributing Covered Code, include this CDDL HEADER in each
.\" file and include the License file at usr/src/OPENSOLARIS.LICENSE.
.\" If applicable, add the following below this CDDL HEADER, with the
.\" fields enclosed by brackets "[]" replaced with your own identifying
.\" information: Portions Copyright [yyyy] [name of copyright owner]
.\"
.\" CDDL HEADER END
.\"
.\" Copyright (c) 2009 Oracle and/or its affiliates. All rights reserved.
.\" Copyright (c) 2009 Michael Gebetsroither <michael.geb@gmx.at>. All rights
.\" reserved.
.\" Copyright (c) 2017, Intel Corporation.
.\"
.Dd Май 26, 2021
.Dt ZTEST 1
.Os
.
.Sh ИМЯ
.Nm ztest
.Nd был написан разработчиками ZFS как модульный тест ZFS
.Sh КРАТКОЕ ОПИСАНИЕ
.Nm
.Op Fl VEG
.Op Fl v Ar vdevs
.Op Fl s Ar size_of_each_vdev
.Op Fl a Ar alignment_shift
.Op Fl m Ar mirror_copies
.Op Fl r Ar raidz_disks/draid_disks
.Op Fl R Ar raid_parity
.Op Fl K Ar raid_kind
.Op Fl D Ar draid_data
.Op Fl S Ar draid_spares
.Op Fl C Ar vdev_class_state
.Op Fl d Ar datasets
.Op Fl t Ar threads
.Op Fl g Ar gang_block_threshold
.Op Fl i Ar initialize_pool_i_times
.Op Fl k Ar kill_percentage
.Op Fl p Ar pool_name
.Op Fl T Ar time
.Op Fl z Ar zil_failure_rate
.
.Sh ОПИСАНРИЕ
.Nm
был написан разработчиками ZFS как модульный тест ZFS. Инструмент 
был разработан в тандеме с функциональностью ZFS и выполнялся каждый вечер как один из многих регрессионных тестов по сравнению с ежедневной сборкой. По мере того, как 
в ZFS добавлялись новые функции, модульные тесты также добавлялись в 
.Nm .
Кроме того, отдельная команда разработчиков тестов написала и выполнила дополнительный функционал и стресс-тесты.
.
.Pp
По умолчанию
.Nm
выполняется в течение десяти минут и использует файлы блоков  (хранящихся в
.Pa /tmp )
для создания pools вместо использования физических дисков.
Блоки файлов обеспечивают
.Nm
гибкость работы с
компонентами zpool, не требуя больших конфигураций оборудования.
Однако сохранение блоков файлов в
.Pa /tmp
может не подойти для вас, если у вас
небольшой каталог tmp.
.
.Pp
По умолчанию не содержит подробных сведений.
Вот почему ввод приведенной выше команды приведет к
.Nm
спокойно проводится в течение 5 минут
Параметр
.Fl V
может использоваться для увеличения детализации инструмента.
Добавление нескольких параметров
.Fl V
разрешено, и чем больше вы добавляете, тем более болтливым
.Nm
становится.
.
.Pp
После того, как 
.Nm
запуск завершится, вы должны заметить множество
.Pa ztest.*
разбросанных файлов.
После завершения запуска вы можете безопасно удалить эти файлы.
Обратите внимание, что удалять эти файлы во время запуска не следует.
Вы можете повторно использовать эти файлы в следующем
.Nm
запускается с помощью
.Fl E
параметра.
.
.Sh ПАРАМЕТРЫ
.Bl -tag -width "-v v"
.It Fl h , \&? , -help
Выносит сводку справки.
.It Fl v , -vdevs Ns = (default: Sy 5 )
Количество vdevs.
.It Fl s , -vdev-size Ns = (default: Sy 64M )
Размер каждого vdev.
.It Fl a , -alignment-shift Ns = (default: Sy 9 ) No (use Sy 0 No for random )
Сдвиг выравнивания, используемый в тесте.
.It Fl m , -mirror-copies Ns = (default: Sy 2 )
 Количество зеркальных копий.
.It Fl r , -raid-disks Ns = (default: Sy 4 No for raidz/ Ns Sy 16 No for draid )
Количество дисков raidz/draid.
.It Fl R , -raid-parity Ns = (default: Sy 1 )
Raid parity (raidz & draid).
.It Fl K , -raid-kind Ns = Ns Sy raidz Ns | Ns Sy draid Ns | Ns Sy random No (по умолчанию: выбирается случайно )
Тип конфигурации RAID для использования.
С
.Sy random
разновидности чередуются между raidz и draid.
.It Fl D , -draid-data Ns = (default: Sy 4 )
Количество дисков с данными в группе резервирования dRAID.
.It Fl S , -draid-spares Ns = (default: Sy 1 )
Количество распределенных драйдом запасных дисков.
.It Fl d , -datasets Ns = (default: Sy 7 )
Количество наборов данных.
.It Fl t , -threads Ns = (default: Sy 23 )
Количество потоков.
.It Fl g , -gang-block-threshold Ns = (default: Sy 32K )
Порог блокировки банды.
.It Fl i , -init-count Ns = (default: Sy 1 )
Количество инициализаций пула.
.It Fl k , -kill-percentage Ns = (default: Sy 70% )
Процент убитых.
.It Fl p , -pool-name Ns = (default: Sy ztest )
Pool название.
.It Fl f , -vdev-file-directory Ns = (default: Pa /tmp )
Файловый каталог для файлов vdev.
.It Fl M , -multi-host
Мультихост; имитация пула, импортированного на удаленный хост.
.It Fl E , -use-existing-pool
Используйте существующий пул (используйте существующий пул вместо создания нового).
.It Fl T , -run-time Ns = (default: Sy 300 Ns s)
Общее время выполнения теста.
.It Fl P , -pass-time Ns = (default: Sy 60 Ns s)
Время на один проход.
.It Fl F , -freeze-loops Ns = (default: Sy 50 )
Максимальное количество циклов в
.Fn spa_freeze .
.It Fl B , -alt-ztest Ns =
Путь к альтернативному ("более старому")
.Nm ztest
для запуска, который будет использоваться для инициализации пула и, в половине
случаев, для запуска тестов.
Параллельный каталог
.Pa lib
добавляется к
.Ev LD_LIBRARY_PATH ;
i.e. given
.Fl B Pa ./chroots/lenny/usr/bin/ Ns Nm ,
.Pa ./chroots/lenny/usr/lib
will be loaded.
.It Fl C , -vdev-class-state Ns = Ns Sy on Ns | Ns Sy off Ns | Ns Sy random No 
будет загружен
Состояние класса распределения vdev.
.It Fl o , -option Ns = Ns Ar variable Ns = Ns Ar value
Устанавливает глобальный
.Ar переменный
в 32-разрядное целое число без знака
.Ar value
(little-endian only).
.It Fl G , -dump-debug
Dump zfs_dbgmsg buffer before exiting due to an error.
.It Fl V , -verbose
Verbose (use multiple times for ever more verbosity).
.El
.
.Sh EXAMPLES
To override
.Pa /tmp
as your location for block files, you can use the
.Fl f
option:
.Dl # ztest -f /
.Pp
To get an idea of what
.Nm
is actually testing try this:
.Dl # ztest -f / -VVV
.Pp
Maybe you'd like to run
.Nm ztest
for longer? To do so simply use the
.Fl T
option and specify the runlength in seconds like so:
.Dl # ztest -f / -V -T 120
.
.Sh ENVIRONMENT VARIABLES
.Bl -tag -width "ZF"
.It Ev ZFS_HOSTID Ns = Ns Em id
Use
.Em id
instead of the SPL hostid to identify this host.
Intended for use with
.Nm , but this environment variable will affect any utility which uses
libzpool, including
.Xr zpool 8 .
Since the kernel is unaware of this setting,
results with utilities other than ztest are undefined.
.It Ev ZFS_STACK_SIZE Ns = Ns Em stacksize
Limit the default stack size to
.Em stacksize
bytes for the purpose of
detecting and debugging kernel stack overflows.
This value defaults to
.Em 32K
which is double the default
.Em 16K
Linux kernel stack size.
.Pp
In practice, setting the stack size slightly higher is needed because
differences in stack usage between kernel and user space can lead to spurious
stack overflows (especially when debugging is enabled).
The specified value
will be rounded up to a floor of PTHREAD_STACK_MIN which is the minimum stack
required for a NULL procedure in user space.
.Pp
By default the stack size is limited to
.Em 256K .
.El
.
.Sh SEE ALSO
.Xr zdb 1 ,
.Xr zfs 1 ,
.Xr zpool 1 ,
.Xr spl 4
